namespace = situation_operation

@DefenderDiscoveryBias = 0.75

@StealResourcesTimer = 5400
@StealResourcesAmountMonths = 24

@IncreaseCrimeTimer = 5400
@IncreaseCrimeDurationYears = 15

## Steal Resources, Stage 1 ##
espionage_operation_event = {
	id = situation_operation.1100
	title = situation_operation.1100.name
	desc = situation_operation.1100.desc
	picture = GFX_evt_spy_network
	show_sound = event_default
	is_triggered_only = yes
	espionage_operation = yes

	option = {
		name = situation_operation.1100.option.nothing
		trigger = {
			NOT = { exists = event_target:easy }
			NOT = { exists = event_target:norm }
			NOT = { exists = event_target:hard }
		}
		destroy_espionage_operation = this
	}

	option = {
		name = situation_operation.1100.option.easy
		trigger = { exists = event_target:easy }
		hidden_effect = {
			event_target:easy = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_easy
		}
	}

	option = {
		name = situation_operation.1100.option.norm
		trigger = { exists = event_target:norm }
		hidden_effect = {
			event_target:norm = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_norm
		}
	}

	option = {
		name = situation_operation.1100.option.hard
		trigger = { exists = event_target:hard }
		hidden_effect = {
			event_target:hard = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_hard
		}
	}

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Select planets to give as options to the player.
		from = {
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					is_capital = no
					num_pops <= 25
				}
				# Save as event target for option.
				save_event_target_as = easy
				# Set the planet's score for display.
				espsit_set_resource_variables = { TARGET = this SCOPE = this }
				espsit_mult_resource_variables_value = { TARGET = this }
				espsit_set_resource_variables_aggregate = { TARGET = this SCOPE = this }
				set_variable = {
					which = espsit_steal_resources_score
					value = this.resources_all
				}
			}
			random_planet_within_border = {
				# Select a random medium-difficulty planet.
				limit = {
					is_owned_by = from
					is_capital = no
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					num_pops > 25
					num_pops < 75
				}
				# Save as event target for option.
				save_event_target_as = norm
				# Set the planet's score for display.
				espsit_set_resource_variables = { TARGET = this SCOPE = this }
				espsit_mult_resource_variables_value = { TARGET = this }
				espsit_set_resource_variables_aggregate = { TARGET = this SCOPE = this }
				set_variable = {
					which = espsit_steal_resources_score
					value = this.resources_all
				}
			}
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					OR = {
						NOT = { exists = event_target:norm }
						NOT = { is_planet = event_target:norm }
					}
					OR = {
						num_pops >= 75
						is_capital = yes
					}
				}
				# Save as event target for option.
				save_event_target_as = hard
				# Set the planet's score for display.
				espsit_set_resource_variables = { TARGET = this SCOPE = this }
				espsit_mult_resource_variables_value = { TARGET = this }
				espsit_set_resource_variables_aggregate = { TARGET = this SCOPE = this }
				set_variable = {
					which = espsit_steal_resources_score
					value = this.resources_all
				}
			}
		}
	}

	after = {
		event_target:operation_target = {
			# Set flags on the target planet.
			hidden_effect = {
				set_planet_flag = operation_target@root
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Steal Resources, Stage 2 ##
espionage_operation_event = {
	id = situation_operation.1200
	title = situation_operation.1200.name
	desc = situation_operation.1200.desc
	picture = GFX_evt_tradestation_interior
	show_sound = event_default
	is_triggered_only = yes
	espionage_operation = yes

	option = {
		name = LAUNCH_OPERATION
	}

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Save flagged planet as event scope for localization.
		from = {
			random_owned_planet = {
				limit = { has_planet_flag = operation_target@root }
				save_event_target_as = operation_target
			}
		}
	}

	after = {
		# Start the situation on the enemy planet.
		event_target:operation_target.owner = {
			start_situation = {
				type = situation_espionage_resources
				target = event_target:operation_target
				effect = {
					# Set flags for going between the situation and operation.
					set_situation_flag = espionage_situation@root
					root = { set_espionage_operation_flag = espionage_attacker@prev }
					# Set the situation's difficulty.
					if = {
						limit = { root = { has_espionage_operation_flag = difficulty_easy } }
						set_situation_flag = difficulty_easy
					}
					else_if = {
						limit = { root = { has_espionage_operation_flag = difficulty_norm } }
						set_situation_flag = difficulty_norm
					}
					else_if = {
						limit = { root = { has_espionage_operation_flag = difficulty_hard } }
						set_situation_flag = difficulty_hard
					}
					# Open the situation window for the defender.
					save_event_target_as = espionage_situation
					event_target:operation_target = {
						planet_event = { id = situation_operation.1201 }
					}
				}
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Steal Resources, Stage 2: Defender's Window ##
planet_event = {
	id = situation_operation.1201
	title = situation_operation.1201.name
	desc = situation_operation.1201.desc
	picture = GFX_evt_ship_offloading_cargo
	show_sound = event_ship_bridge
	is_triggered_only = yes

	immediate = {
		event_target:espionage_situation.target = {
			save_event_target_as = operation_target
		}
	}

	# (basic, replace civic) Do Nothing
	option = {
		name = situation_operation.1201.option.nothing
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_nothing
		}
		trigger = {
			owner = {
				has_espionage_situation_resources_civic_approach = no
			}
		}
	}

	# (basic, replace ethic) Weak Response
	option = {
		name = situation_operation.1201.option.basic_weak
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_basic_weak
		}
		trigger = {
			owner = {
				has_espionage_situation_resources_ethic_approach = no
			}
		}
	}

	# (basic, replace ethic) Strong Response
	option = {
		name = situation_operation.1201.option.basic_strong
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_basic_strong
		}
		trigger = {
			owner = {
				has_espionage_situation_resources_ethic_approach = no
			}
		}
	}

	# (ethic) Authoritarian, weak
	option = {
		name = situation_operation.1201.option.weak_police
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_police
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_authoritarian = yes }
		}
	}

	# (ethic) Authoritarian, strong
	option = {
		name = situation_operation.1201.option.strong_police
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_police
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_authoritarian = yes }
		}
	}

	# (ethic) Egalitarian, weak
	option = {
		name = situation_operation.1201.option.weak_task_force
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_task_force
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_egalitarian = yes }
		}
	}

	# (ethic) Egalitarian, strong
	option = {
		name = situation_operation.1201.option.strong_task_force
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_task_force
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_egalitarian = yes }
		}
	}

	# (ethic) Militarist, weak
	option = {
		name = situation_operation.1201.option.weak_soldiers
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_soldiers
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_militarist = yes }
		}
	}

	# (ethic) Militarist, strong
	option = {
		name = situation_operation.1201.option.strong_soldiers
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_soldiers
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_militarist = yes }
		}
	}

	# (ethic) Pacifist, weak
	option = {
		name = situation_operation.1201.option.weak_counter
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_counter
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_pacifist = yes }
		}
	}

	# (ethic) Pacifist, strong
	option = {
		name = situation_operation.1201.option.strong_counter
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_counter
		}
		trigger = {
			owner = { can_espionage_situation_approach_ethic_pacifist = yes }
		}
	}

}

## Steal Resources, Result Stage ##
espionage_operation_event = {
	id = situation_operation.1900
	title = situation_operation.1900.name
	desc = situation_operation.1900.desc
	picture = GFX_evt_resource_cache
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	option = {
		name = situation_operation.1900.option.fail
		trigger = {
			NOT = { exists = event_target:espionage_situation }
		}
	}

	option = {
		name = situation_operation.1900.option.take
		allow = {
			exists = event_target:espionage_situation
		}
	}

	option = {
		name = situation_operation.1900.option.destroy
		allow = {
			exists = event_target:espionage_situation
			owner = {
				has_resource = { type = influence amount >= 50 }
				is_pacifist = no
			}
			has_espionage_asset_sabotage = yes
			event_target:espionage_situation = { situation_progress < 40 }
		}
		destroy_espionage_asset_sabotage = yes
		owner = {
			add_resource = {
				influence = -100
			}
		}
		event_target:operation_target = {
			add_planet_devastation = 20
		}
	}

	immediate = {
		# Save flagged planet as event scope for localization.
		from = {
			random_owned_planet = {
				limit = { has_planet_flag = operation_target@root }
				save_event_target_as = operation_target
			}
			random_situation = {
				limit = { has_situation_flag = espionage_situation@root }
				save_event_target_as = espionage_situation
			}
		}
		# Count stolen resources.
		if = {
			limit = { exists = event_target:espionage_situation }
			espsit_set_resource_variables = {
				TARGET = root
				SCOPE = event_target:operation_target
				MULT = value:espionage_situation_multiplier
			}
		}
		else = {
			espsit_set_resource_variables_empty = {
				TARGET = root
			}
		}
		# End the defender's situation.
		abort_situation = event_target:espionage_situation
	}

	after = {
		# Delay repeating this operation.
		hidden_effect = {
			spynetwork = {
				set_saved_date = {
					key = recently_stole_resources
					days_from_present = @StealResourcesTimer
					expires = @StealResourcesTimer
				}
			}
		}
		# Add resources based on situation multiplier.
		root.owner = {
			if = {
				limit = {
					root = { check_variable = { which = resources_energy value > 0 } }
				}
				add_resource = {
					energy = @StealResourcesAmountMonths
					mult = root.resources_energy
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_minerals value > 0 } }
				}
				add_resource = {
					minerals = @StealResourcesAmountMonths
					mult = root.resources_minerals
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_food value > 0 } }
				}
				add_resource = {
					food = @StealResourcesAmountMonths
					mult = root.resources_food
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_consumer_goods value > 0 } }
				}
				add_resource = {
					consumer_goods = @StealResourcesAmountMonths
					mult = root.resources_consumer_goods
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_alloys value > 0 } }
				}
				add_resource = {
					alloys = @StealResourcesAmountMonths
					mult = root.resources_alloys
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_volatile_motes value > 0 } }
				}
				add_resource = {
					volatile_motes = @StealResourcesAmountMonths
					mult = root.resources_volatile_motes
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_exotic_gases value > 0 } }
				}
				add_resource = {
					exotic_gases = @StealResourcesAmountMonths
					mult = root.resources_exotic_gases
				}
			}
			if = {
				limit = {
					root = { check_variable = { which = resources_rare_crystals value > 0 } }
				}
				add_resource = {
					rare_crystals = @StealResourcesAmountMonths
					mult = root.resources_rare_crystals
				}
			}
		}
		# Randomly select defender's outcome.
		if = {
			limit = { exists = event_target:operation_target }
			random_list = {
				# Attacker stays undiscovered.
				100 = {
					modifier = {
						factor = 0
						check_variable_arithmetic = {
							which = value:espionage_situation_progress
							value > 80
						}
					}
					event_target:operation_target = {
						planet_event = { id = situation_operation.1902 }
					}
				}
				# Defender discovers attacker.
				0 = {
					modifier = {
						add = value:espionage_situation_progress
						check_variable_arithmetic = {
							which = value:espionage_situation_progress
							value > 20
						}
					}
					modifier = {
						mult = @DefenderDiscoveryBias
					}
					root.owner = {
						save_event_target_as = espionage_aggressor
					}
					event_target:operation_target = {
						planet_event = { id = situation_operation.1901 }
					}
				}
			}
		}
		# Random chance to destroy asset.
		random_list = {
			# Keep all assets.
			50 = {
				modifier = {
					factor = 0
					has_espionage_operation_flag = difficulty_hard
				}
			}
			# Destroy an asset.
			0 = {
				modifier = {
					add = 50
					has_espionage_asset_subterfuge = yes
				}
				modifier = {
					add = 50
					has_espionage_asset_economy = yes
				}
				modifier = {
					factor = 0.5
					has_espionage_operation_flag = difficulty_easy
				}
				locked_random_list = {
					1 = { destroy_espionage_asset_subterfuge = yes }
					1 = { destroy_espionage_asset_economy = yes }
				}
			}
		}
		# Add negative modifier based on situation progress.
		if = {
			limit = {
				exists = event_target:operation_target
				exists = event_target:espionage_situation
				event_target:espionage_situation = { situation_progress < 80 }
			}
			event_target:operation_target = {
				if = {
					limit = { event_target:espionage_situation = { situation_progress > 70 } }
					add_modifier = {
						modifier = espsit_stolen_resources_10
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 60 } }
					add_modifier = {
						modifier = espsit_stolen_resources_10
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 50 } }
					add_modifier = {
						modifier = espsit_stolen_resources_20
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 40 } }
					add_modifier = {
						modifier = espsit_stolen_resources_30
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 30 } }
					add_modifier = {
						modifier = espsit_stolen_resources_40
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 20 } }
					add_modifier = {
						modifier = espsit_stolen_resources_40
						months = @StealResourcesAmountMonths
					}
				}
				else_if = {
					limit = { event_target:espionage_situation = { situation_progress > 10 } }
					add_modifier = {
						modifier = espsit_stolen_resources_50
						months = @StealResourcesAmountMonths
					}
				}
				else = {
					add_modifier = {
						modifier = espsit_stolen_resources_50
						months = @StealResourcesAmountMonths
					}
				}
			}
		}
		# End this operation.
		destroy_espionage_operation = this
	}
}

## Steal Resources, Results Stage: Defender's Window (discovered) ##
planet_event = {
	id = situation_operation.1901
	title = situation_operation.1901.name
	desc = {
		text = situation_operation.1901.desc
		trigger = {
			owner = {
				OR = {
					is_homicidal = no
					is_xenophobe = no
					NOT = { is_same_species = event_target:espionage_aggressor }
				}
			}
		}
	}
	desc = {
		text = situation_operation.1901.desc.xenophobe
		trigger = {
			owner = {
				OR = {
					is_homicidal = yes
					is_xenophobe = yes
				}
				NOT = { is_same_species = event_target:espionage_aggressor }
			}
		}
	}
	picture = GFX_evt_cover_blown
	show_sound = event_ship_thrusters
	is_triggered_only = yes

	option = {
		name = CURSES
		owner = {
			add_opinion_modifier = {
				who = event_target:espionage_aggressor
				modifier = opinion_exposed_major_espionage
			}
			add_trust = {
				who = event_target:espionage_aggressor
				amount = -20
			}
		}
	}
}

## Steal Resources, Results Stage: Defender's Window (undiscovered) ##
planet_event = {
	id = situation_operation.1902
	title = situation_operation.1902.name
	desc = {
		text = situation_operation.1902.desc
		trigger = {
			owner = { is_gestalt = no }
		}
	}
	desc = {
		text = situation_operation.1902.desc.gestalt
		trigger = {
			owner = { is_gestalt = yes }
		}
	}
	picture = GFX_evt_black_market
	show_sound = event_ship_thrusters
	is_triggered_only = yes

	option = {
		name = ACKNOWLEDGED
		add_modifier = {
			modifier = crime_boss_arrested
			months = @StealResourcesAmountMonths
		}
	}
}

## Increase Crime, Stage 1 ##
espionage_operation_event = {
	id = situation_operation.2100
	title = situation_operation.2100.name
	desc = situation_operation.2100.desc
	picture = GFX_evt_underground_city
	show_sound = event_default
	espionage_operation = yes
	is_triggered_only = yes

	option = {
		name = situation_operation.2100.option.nothing
		trigger = {
			NOT = { exists = event_target:easy }
			NOT = { exists = event_target:norm }
			NOT = { exists = event_target:hard }
		}
		destroy_espionage_operation = this
	}

	option = {
		name = situation_operation.2100.option.easy
		trigger = { exists = event_target:easy }
		hidden_effect = {
			event_target:easy = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_easy
		}
	}

	option = {
		name = situation_operation.2100.option.norm
		trigger = { exists = event_target:norm }
		hidden_effect = {
			event_target:norm = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_norm
		}
	}

	option = {
		name = situation_operation.2100.option.hard
		trigger = { exists = event_target:hard }
		hidden_effect = {
			event_target:hard = { save_event_target_as = operation_target }
			set_espionage_operation_flag = difficulty_hard
		}
	}

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Select planets to give as options to the player.
		from = {
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					is_capital = no
					num_pops <= 25
				}
				# Save as event target for option.
				save_event_target_as = easy
				# Set the planet's score for display.
				set_variable = {
					which = espsit_increase_crime_score
					value = trigger:planet_crime
				}
			}
			random_planet_within_border = {
				# Select a random medium-difficulty planet.
				limit = {
					is_owned_by = from
					is_capital = no
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					num_pops > 25
					num_pops < 75
				}
				# Save as event target for option.
				save_event_target_as = norm
				# Set the planet's score for display.
				set_variable = {
					which = espsit_increase_crime_score
					value = trigger:planet_crime
				}
			}
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					OR = {
						NOT = { exists = event_target:norm }
						NOT = { is_planet = event_target:norm }
					}
					OR = {
						num_pops >= 75
						is_capital = yes
					}
				}
				# Save as event target for option.
				save_event_target_as = hard
				# Set the planet's score for display.
				set_variable = {
					which = espsit_increase_crime_score
					value = trigger:planet_crime
				}
			}
		}
	}

	after = {
		event_target:operation_target = {
			# Set flags on the target planet.
			hidden_effect = {
				set_planet_flag = operation_target@root
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Increase Crime, Stage 2 ##
# Just for setting the 'crime_option_xxx' flag on the operation.
espionage_operation_event = {
	id = situation_operation.2200
	title = situation_operation.2200.name
	desc = situation_operation.2200.desc
	picture = GFX_evt_bribery
	show_sound = event_default
	espionage_operation = yes
	is_triggered_only = yes

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Set 'operation_target' event target.
		espsit_set_operation_target = yes
	}

	option = {
		name = situation_operation.2200.option.normal_leader
		trigger = { from = { is_gestalt = no } }
		hidden_effect = { set_espionage_operation_flag = crime_option_normal_leader }
	}

	option = {
		name = situation_operation.2200.option.normal_underworld
		trigger = { from = { is_gestalt = no } }
		hidden_effect = { set_espionage_operation_flag = crime_option_normal_underworld }
	}

	option = {
		name = situation_operation.2200.option.normal_police
		trigger = { from = { is_gestalt = no } }
		hidden_effect = { set_espionage_operation_flag = crime_option_normal_police }
	}

	option = {
		name = situation_operation.2200.option.gestalt_underworld
		trigger = { from = { is_gestalt = yes } }
		hidden_effect = { set_espionage_operation_flag = crime_option_gestalt_underworld }
	}

	option = {
		name = situation_operation.2200.option.gestalt_separate
		trigger = { from = { is_gestalt = yes } }
		hidden_effect = { set_espionage_operation_flag = crime_option_gestalt_separate }
	}

	after = {
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Increase Crime, Stage 3 ##
# Start the defender's situation.
espionage_operation_event = {
	id = situation_operation.2300
	title = situation_operation.2300.name
	desc = {
		text = situation_operation.2300.desc.normal_leader
		trigger = { has_espionage_operation_flag = crime_option_normal_leader }
	}
	desc = {
		text = situation_operation.2300.desc.normal_underworld
		trigger = { has_espionage_operation_flag = crime_option_normal_underworld }
	}
	desc = {
		text = situation_operation.2300.desc.normal_police
		trigger = { has_espionage_operation_flag = crime_option_normal_police }
	}
	desc = {
		text = situation_operation.2300.desc.gestalt_separate
		trigger = { has_espionage_operation_flag = crime_option_gestalt_underworld }
	}
	desc = {
		text = situation_operation.2300.desc.gestalt_underworld
		trigger = { has_espionage_operation_flag = crime_option_gestalt_separate }
	}
	picture = GFX_evt_bribery
	show_sound = event_default
	espionage_operation = yes
	is_triggered_only = yes

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Set 'operation_target' event target.
		espsit_set_operation_target = yes
	}

	option = {
		name = LAUNCH_OPERATION
	}

	after = {
		# Start the situation on the enemy planet.
		event_target:operation_target.owner = {
			start_situation = {
				type = situation_espionage_crime
				target = event_target:operation_target
				effect = {
					# Set flags for going between the situation and operation.
					set_situation_flag = espionage_situation@root
					root = { set_espionage_operation_flag = espionage_attacker@prev }
					# Set the situation's difficulty.
					if = {
						limit = { root = { has_espionage_operation_flag = difficulty_easy } }
						set_situation_flag = difficulty_easy
					}
					else_if = {
						limit = { root = { has_espionage_operation_flag = difficulty_norm } }
						set_situation_flag = difficulty_norm
					}
					else_if = {
						limit = { root = { has_espionage_operation_flag = difficulty_hard } }
						set_situation_flag = difficulty_hard
					}
					# Open the situation window for the defender.
					save_event_target_as = espionage_situation
					# event_target:operation_target = {
					# 	planet_event = { id = situation_operation.2301 }
					# }
				}
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Increase Crime, Results Stage ##
espionage_operation_event = {
	id = situation_operation.2900
	title = situation_operation.2900.name
	desc = situation_operation.2900.desc
	picture = GFX_evt_black_market
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Set 'operation_target' event target.
		espsit_set_operation_target = yes
		# Set 'espionage_situation' event target.
		espsit_set_espionage_situation = yes
		# Check situation progress.
		if = {
			limit = { espsit_operation_failed = { PROGRESS = 80 } }
			set_espionage_operation_flag = operation_failed
			set_variable = { which = modifier_duration value = 0 }
		}
		else = {
			# Set variables from situation progress.
			set_variable = {
				which = situation_progress
				value = value:espionage_situation_progress
			}
			set_variable = {
				which = situation_multiplier
				value = value:espionage_situation_multiplier
			}
			# End defender's situation.
			abort_situation = event_target:espionage_situation
		}
	}

	option = {
		name = situation_operation.2900.option.fail
		trigger = { has_espionage_operation_flag = operation_failed }
	}

	option = {
		name = situation_operation.2900.option.normal_leader
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_normal_leader
		}
		allow = {
			exists = event_target:operation_target.leader
		}
		event_target:operation_target.leader = {
			add_experience = -1 # TODO: Add corrupt trait.
		}
		if = {
			limit = { check_variable = { which = root.situation_progress value < 40 } }
			event_target:operation_target = {
				add_modifier = {
					modifier = crime_wave
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.normal_rulers
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_normal_leader
		}
		event_target:operation_target = {
			add_modifier = {
				modifier = bribed_officials
				years = @IncreaseCrimeDurationYears
				time_multiplier = root.situation_multiplier
			}
			if = {
				limit = { check_variable = { which = root.situation_progress value < 40 } }
				add_modifier = {
					modifier = crime_wave
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.normal_underworld
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_normal_underworld
		}
		event_target:operation_target = {
			add_modifier = {
				modifier = crime_wave
				years = @IncreaseCrimeDurationYears
				time_multiplier = root.situation_multiplier
			}
			if = {
				limit = { check_variable = { which = root.situation_progress value < 40 } }
				random_list = {
					1 = {
						add_modifier = {
							modifier = criminal_underworld
							years = @IncreaseCrimeDurationYears
							time_multiplier = root.situation_multiplier
						}
					}
					1 = {
						add_modifier = {
							modifier = cartel_war
							years = @IncreaseCrimeDurationYears
							time_multiplier = root.situation_multiplier
						}
					}
					1 = {
						add_modifier = {
							modifier = substance_abuse
							years = @IncreaseCrimeDurationYears
							time_multiplier = root.situation_multiplier
						}
					}
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.normal_police
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_normal_police
		}
		event_target:operation_target = {
			if = {
				limit = { check_variable = { which = root.situation_progress value < 40 } }
				add_modifier = {
					modifier = crime_wave
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
			random_list = {
				1 = {
					add_modifier = {
						modifier = espsit_degraded_police
						years = @IncreaseCrimeDurationYears
						time_multiplier = root.situation_multiplier
					}
				}
				1 = {
					add_modifier = {
						modifier = espsit_degraded_justice
						years = @IncreaseCrimeDurationYears
						time_multiplier = root.situation_multiplier
					}
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.gestalt_underworld_supplies
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_gestalt_underworld
		}
		if = {
			limit = { owner = { is_machine_empire = yes } }
			root.owner = {
				add_resource = {
					alloys = -50
					energy = -200
				}
			}
			event_target:operation_target = {
				add_modifier = {
					modifier = espsit_supplied_corruption
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
		else = {
			root.owner = {
				add_resource = {
					food = -300
				}
			}
			event_target:operation_target = {
				add_modifier = {
					modifier = espsit_supplied_deviancy
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.gestalt_underworld_weapons
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_gestalt_underworld
		}
		if = {
			limit = { owner = { is_machine_empire = yes } }
			root.owner = {
				add_resource = {
					alloys = -300
					energy = -100
				}
			}
			event_target:operation_target = {
				add_modifier = {
					modifier = espsit_supplied_corruption
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
		else = {
			root.owner = {
				add_resource = {
					alloys = -300
					food = -100
				}
			}
			event_target:operation_target = {
				add_modifier = {
					modifier = espsit_supplied_deviancy
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
	}

	option = {
		name = situation_operation.2900.option.gestalt_separate
		trigger = {
			NOT = { has_espionage_operation_flag = operation_failed }
			has_espionage_operation_flag = crime_option_gestalt_separate
		}
		if = {
			limit = { owner = { is_machine_empire = yes } }
			event_target:operation_target = {
				add_modifier = {
					modifier = drone_corruption
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
		else = {
			event_target:operation_target = {
				add_modifier = {
					modifier = drone_deviancy
					years = @IncreaseCrimeDurationYears
					time_multiplier = root.situation_multiplier
				}
			}
		}
	}

	after = {
		# Delay repeating this operation.
		hidden_effect = {
			spynetwork = {
				set_saved_date = {
					key = recently_increased_crime
					days_from_present = @IncreaseCrimeTimer
					expires = @IncreaseCrimeTimer
				}
			}
		}
		# Random chance to destroy asset.
		random_list = {
			# Keep all assets.
			100 = {
				modifier = {
					factor = 0.1
					has_espionage_operation_flag = difficulty_hard
				}
			}
			# Destroy an asset.
			0 = {
				modifier = {
					add = 100
					has_espionage_asset_sabotage = yes
				}
				modifier = {
					add = 100
					has_espionage_asset_government = yes
				}
				modifier = {
					factor = 0.5
					has_espionage_operation_flag = difficulty_easy
				}
				locked_random_list = {
					1 = { destroy_espionage_asset_sabotage = yes }
					1 = { destroy_espionage_asset_government = yes }
				}
			}
		}
		# TODO: Show defender window.
		# End this operation.
		destroy_espionage_operation = this
	}

}
