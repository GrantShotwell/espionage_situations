namespace = situation_operation

@StealResourcesTimer = 10

## Steal Resources, Stage 1 ##
espionage_operation_event = {
	id = situation_operation.1100
	title = situation_operation.1100.name
	desc = situation_operation.1100.desc
	picture = GFX_evt_sabotaged_ship
	show_sound = event_default
	is_triggered_only = yes
	espionage_operation = yes

	option = {
		name = UNFORTUNATE
		trigger = {
			NOT = { exists = event_target:easy }
			NOT = { exists = event_target:norm }
			NOT = { exists = event_target:hard }
		}
		destroy_espionage_operation = this
	}

	option = {
		name = situation_operation.1100.option.easy
		trigger = { exists = event_target:easy }
		hidden_effect = {
			event_target:easy = {
				save_event_target_as = operation_target
			}
		}
	}

	option = {
		name = situation_operation.1100.option.norm
		trigger = { exists = event_target:norm }
		hidden_effect = {
			event_target:norm = {
				save_event_target_as = operation_target
			}
		}
	}

	option = {
		name = situation_operation.1100.option.hard
		trigger = { exists = event_target:hard }
		hidden_effect = {
			event_target:hard = {
				save_event_target_as = operation_target
			}
		}
	}

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Select planets to give as options to the player.
		from = {
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					num_pops <= 25
				}
				save_event_target_as = easy
			}
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					num_pops > 25
					num_pops < 75
				}
				save_event_target_as = norm
			}
			random_planet_within_border = {
				limit = {
					is_owned_by = from
					OR = {
						NOT = { exists = event_target:easy }
						NOT = { is_planet = event_target:easy }
					}
					OR = {
						NOT = { exists = event_target:norm }
						NOT = { is_planet = event_target:norm }
					}
					num_pops >= 75
				}
				save_event_target_as = hard
			}
		}
	}

	after = {
		event_target:operation_target = {
			# Set flags on the target planet.
			hidden_effect = {
				set_planet_flag = operation_target@root
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Steal Resources, Stage 2 ##
espionage_operation_event = {
	id = situation_operation.1200
	title = situation_operation.1200.name
	desc = situation_operation.1200.desc
	picture = GFX_evt_sabotaged_ship
	show_sound = event_default
	is_triggered_only = yes
	espionage_operation = yes

	option = {
		name = LAUNCH_OPERATION
	}

	immediate = {
		# Stop operations rolls until option is picked.
		set_espionage_operation_progress_locked = yes
		# Save flagged planet as event scope for localization.
		from = {
			random_owned_planet = {
				limit = { has_planet_flag = operation_target@root }
				save_event_target_as = operation_target
			}
		}
	}

	after = {
		# Start the situation on the enemy planet.
		event_target:operation_target.owner = {
			start_situation = {
				type = situation_espionage_resources
				target = event_target:operation_target
				effect = {
					# Set flags for going between the situation and operation.
					set_situation_flag = espionage_situation@root
					root = { set_espionage_operation_flag = espionage_attacker@prev }
				}
			}
		}
		# Start operation rolls.
		set_espionage_operation_progress_locked = no
	}
}

## Steal Resources, Stage 2: Defender Window ##
planet_event = {
	id = situation_operation.1201
	title = situation_operation.1201.name
	desc = situation_operation.1201.desc
	picture = GFX_evt_ship_offloading_cargo
	show_sound = event_ship_bridge
	is_triggered_only = yes

	# (basic) Do Nothing
	option = {
		name = situation_operation.1201.option.nothing
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_nothing
		}
	}

	# (basic) Weak Response
	option = {
		name = situation_operation.1201.option.basic_weak
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_basic_weak
		}
	}

	# (basic) Strong Response
	option = {
		name = situation_operation.1201.option.basic_strong
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_basic_strong
		}
	}

	# (ethic) Authoritarian, weak
	option = {
		name = situation_operation.1201.option.weak_police
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_police
		}
		trigger = {
			owner = { is_authoritarian = yes }
		}
	}

	# (ethic) Authoritarian, strong
	option = {
		name = situation_operation.1201.option.strong_police
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_police
		}
		trigger = {
			owner = { is_authoritarian = yes }
		}
	}

	# (ethic) Militarist, weak
	option = {
		name = situation_operation.1201.option.weak_soldiers
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_soldiers
		}
		trigger = {
			owner = { is_militarist = yes }
		}
	}

	# (ethic) Militarist, strong
	option = {
		name = situation_operation.1201.option.strong_soldiers
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_soldiers
		}
		trigger = {
			owner = { is_militarist = yes }
		}
	}

	# (ethic) Egalitarian, weak
	option = {
		name = situation_operation.1201.option.weak_task_force
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_task_force
		}
		trigger = {
			owner = { is_egalitarian = yes }
		}
	}

	# (ethic) Egalitarian, strong
	option = {
		name = situation_operation.1201.option.strong_task_force
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_task_force
		}
		trigger = {
			owner = { is_egalitarian = yes }
		}
	}

	# (ethic) Pacifist, weak
	option = {
		name = situation_operation.1201.option.weak_counter
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_weak_counter
		}
		trigger = {
			owner = { is_pacifist = yes }
		}
	}

	# (ethic) Pacifist, strong
	option = {
		name = situation_operation.1201.option.strong_counter
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_strong_counter
		}
		trigger = {
			owner = { is_pacifist = yes }
		}
	}

	immediate = {
		owner = {
			random_situation = {
				limit = { has_situation_flag = situation_espionage_resources }
				save_event_target_as = espionage_sitation
			}
		}
		event_target:espionage_situation = {
			set_situation_approach = situation_espionage_resources_approach_nothing
		}
	}

}

## Steal Resources, Result Stage ##
espionage_operation_event = {
	id = situation_operation.1900
	title = situation_operation.1900.name
	desc = situation_operation.1900.desc
	picture = GFX_evt_sabotaged_ship
	show_sound = event_espionage_concluded
	is_triggered_only = yes

	option = {
		name = situation_operation.1900.option.take
	}

	option = {
		name = situation_operation.1900.option.destroy
	}

	immediate = {
		# Save flagged planet as event scope for localization.
		from = {
			random_owned_planet = {
				limit = { has_planet_flag = operation_target@root }
				save_event_target_as = operation_target
			}
			random_situation = {
				limit = { has_situation_flag = espionage_situation@root }
				save_event_target_as = espionage_sitation
			}
		}
	}

	after = {
		# Delay repeating this operation.
		spynetwork = {
			set_saved_date = {
				key = recently_stole_resources
				days_from_present = @StealResourcesTimer
				expires = @StealResourcesTimer
			}
		}
		# Add resources based on situation multiplier.
		root.owner = {
			add_resource = {
				energy = 24 # Number of months to receive
				mult = value:espsit_planet_energy|SCOPE|event_target:operation_target|MULT|value:espionage_situation_multiplier|
			}
			add_resource = {
				minerals = 24
				mult = value:espsit_planet_minerals|SCOPE|event_target:operation_target|MULT|value:espionage_situation_multiplier|
			}
			add_resource = {
				food = 24
				mult = value:espsit_planet_food|SCOPE|event_target:operation_target|MULT|value:espionage_situation_multiplier|
			}
			add_resource = {
				alloys = 24
				mult = value:espsit_planet_alloys|SCOPE|event_target:operation_target|MULT|value:espionage_situation_multiplier|
			}
			add_resource = {
				consumer_goods = 24
				mult = value:espsit_planet_consumer_goods|SCOPE|event_target:operation_target|MULT|value:espionage_situation_multiplier|
			}
		}
		# End the defender's situation.
		abort_situation = event_target:espionage_sitation
		# End this operation.
		destroy_espionage_operation = this
	}
}

## Steal Resources, Results Stage: Defender Window ##
# planet_event = {
# 	#
# }
